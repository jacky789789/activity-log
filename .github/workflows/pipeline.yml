name: CI/CD Deployment Pipeline

on:
  workflow_dispatch: {}
  push:
    branches: [ main, master ]

permissions:
  contents: write
  deployments: write

concurrency:
  group: pipeline-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install & Build (Bun-first with fallbacks)
        run: |
          bun install
          npm run build || bun run build || bunx @vercel/ncc build src/index.js --license licenses.txt
          zip -r build.zip .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

deploy-staging:
  needs: build
  runs-on: ubuntu-latest
  environment: staging
  steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact

    - name: Release Staging
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAG: ${{ vars.BUILD_TAG }}
        NOTE: ${{ vars.RELEASE_NOTE }}
      run: |
        gh release delete "$TAG" -y || true
        gh api -X DELETE repos/${{ github.repository }}/git/refs/tags/$TAG || true
        gh release create "$TAG" build.zip --notes "$NOTE"

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production   # 這裡會卡審核（Required reviewers）
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact

    - name: Release Production
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAG: ${{ vars.BUILD_TAG }}
        NOTE: ${{ vars.RELEASE_NOTE }}
      run: |
        gh release delete "$TAG" -y || true
        gh api -X DELETE repos/${{ github.repository }}/git/refs/tags/$TAG || true
        gh release create "$TAG" build.zip --notes "$NOTE"
