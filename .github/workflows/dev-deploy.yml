name: CI Dev Deployment

on:
  push:
    branches: [main, master]

permissions:
  contents: write

concurrency:
  group: dev-release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  prepare-version:
    runs-on: ubuntu-latest
    outputs:
      next_tag: ${{ steps.bump.outputs.next_tag }}
      release_notes: ${{ steps.notes.outputs.notes }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔢 Bump semantic version
        id: bump
        run: npm run version:bump

      - name: 📝 Generate release notes
        id: notes
        env:
          RELEASE_ENV: dev
          RELEASE_VERSION: ${{ steps.bump.outputs.next_tag }}
        run: npm run version:notes

      - name: 📤 Upload bumped package metadata
        uses: actions/upload-artifact@v4
        with:
          name: bumped-package-json
          path: package.json

  build:
    needs: prepare-version
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Download bumped package metadata
        uses: actions/download-artifact@v4
        with:
          name: bumped-package-json
          path: bumped-package

      - name: 🔄 Apply bumped package metadata
        run: |
          mv bumped-package/package.json package.json
          rm -rf bumped-package

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 🧰 Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 🏗️ Install & Build (Bun-first with fallbacks)
        run: |
          bun install
          npm run build || bun run build || bunx @vercel/ncc build src/index.js --license licenses.txt
          zip -r build.zip .

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  deploy-dev:
    needs:
      - prepare-version
      - build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: 📥 Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: 🚿 Cleanup existing release & tag (idempotent)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ needs.prepare-version.outputs.next_tag }}-dev
        run: |
          if gh release view "$TAG" --repo "$GITHUB_REPOSITORY" >/dev/null 2>&1; then
            gh release delete "$TAG" -y --repo "$GITHUB_REPOSITORY"
          fi
          gh api -X DELETE "repos/$GITHUB_REPOSITORY/git/refs/tags/$TAG" || true

      - name: 🚀 Create Dev Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ needs.prepare-version.outputs.next_tag }}-dev
          NOTE: ${{ needs.prepare-version.outputs.release_notes }}
        run: |
          gh release create "$TAG" build.zip --notes "$NOTE"$'\n''Environment: dev' --repo "$GITHUB_REPOSITORY"
